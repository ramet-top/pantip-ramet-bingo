{"ast":null,"code":"import _slicedToArray from \"/Users/ramet.top/Downloads/bingo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/ramet.top/Downloads/bingo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ramet.top/Downloads/bingo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ramet.top/Downloads/bingo/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport shuffle from \"shuffle-array\";\nimport \"./styles.css\";\nimport { start } from \"./Confetti\";\n\nfunction Confetti() {\n  useEffect(function () {\n    start();\n  });\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction Tile(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      onToggle = _ref.onToggle,\n      isSet = _ref.isSet;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onToggle,\n    className: \"tile \".concat(isSet ? \"tile--set\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nvar card = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\"];\nvar data = shuffle(card).reduce(function (data, value, index) {\n  return _objectSpread({}, data, _defineProperty({}, index, value));\n}, {});\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState({\n    checked: {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var isWon = function isWon(checked) {\n    var range = [0, 1, 2, 3, 4];\n    return undefined !== range.find(function (row) {\n      return range.every(function (column) {\n        return checked[row * 5 + column];\n      });\n    }) || undefined !== range.find(function (column) {\n      return range.every(function (row) {\n        return checked[row * 5 + column];\n      });\n    }) || range.every(function (index) {\n      return checked[index * 5 + index];\n    }) || range.every(function (index) {\n      return checked[index * 5 + 4 - index];\n    });\n  };\n\n  var toggle = function toggle(id) {\n    return setState(function (state) {\n      var checked = _objectSpread({}, state.checked, _defineProperty({}, id, !state.checked[id]));\n\n      var won = isWon(checked);\n      return _objectSpread({}, state, {\n        checked: checked,\n        won: won\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Bingo Game!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, Object.keys(data).map(function (id) {\n    return /*#__PURE__*/React.createElement(Tile, {\n      key: id,\n      id: id,\n      isSet: !!state.checked[id],\n      onToggle: function onToggle() {\n        return toggle(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, data[id]);\n  })), state.won ? /*#__PURE__*/React.createElement(Confetti, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 20\n    }\n  }) : null);\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/ramet.top/Downloads/bingo/src/index.js"],"names":["React","useState","useEffect","ReactDOM","shuffle","start","Confetti","Tile","id","children","onToggle","isSet","card","data","reduce","value","index","App","checked","state","setState","isWon","range","undefined","find","row","every","column","toggle","won","Object","keys","map","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport shuffle from \"shuffle-array\";\n\nimport \"./styles.css\";\n\nimport { start } from \"./Confetti\";\n\nfunction Confetti() {\n  useEffect(() => {\n    start();\n  });\n  return <canvas id=\"canvas\" />;\n}\n\nfunction Tile({ id, children, onToggle, isSet }) {\n  return (\n    <div onClick={onToggle} className={`tile ${isSet ? \"tile--set\" : \"\"}`}>\n      {children}\n    </div>\n  );\n}\n\nconst card = [\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"17\",\n  \"18\",\n  \"19\",\n  \"20\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"24\",\n  \"25\"\n];\n\nconst data = shuffle(card).reduce(\n  (data, value, index) => ({ ...data, [index]: value }),\n  {}\n);\n\nfunction App() {\n  const [state, setState] = useState({ checked: {} });\n  const isWon = checked => {\n    const range = [0, 1, 2, 3, 4];\n    return (\n      undefined !==\n        range.find(row => range.every(column => checked[row * 5 + column])) ||\n      undefined !==\n        range.find(column => range.every(row => checked[row * 5 + column])) ||\n      range.every(index => checked[index * 5 + index]) ||\n      range.every(index => checked[index * 5 + 4 - index])\n    );\n  };\n  const toggle = id =>\n    setState(state => {\n      const checked = { ...state.checked, [id]: !state.checked[id] };\n      const won = isWon(checked);\n      return {\n        ...state,\n        checked,\n        won\n      };\n    });\n\n  return (\n    <div className=\"App\">\n      <h1>Bingo Game!</h1>\n      <div className=\"wrapper\">\n        {Object.keys(data).map(id => (\n          <Tile\n            key={id}\n            id={id}\n            isSet={!!state.checked[id]}\n            onToggle={() => toggle(id)}\n          >\n            {data[id]}\n          </Tile>\n        ))}\n      </div>\n      {state.won ? <Confetti /> : null}\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}